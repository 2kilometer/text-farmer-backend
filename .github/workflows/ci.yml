name: Django CI (Continous Integration)

on:
  push:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Check current directory
      run: pwd

    - name: List files in current directory
      run: ls -la

    - name: Cache pip
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m venv .venv
        source .venv/bin/activate
        pip install --upgrade pip
        pip install -r requirements.txt

    - name: Create .env file for CI Test
      run: |
        echo "${{ secrets.CORS_ALLOWED_ORIGINS }}" > .env
        echo "${{ secrets.CSRF_TRUSTED_ORIGINS }}" >> .env
        echo "${{ secrets.DATABASE_NAME }}" >> .env
        echo "${{ secrets.DATABASE_USER }}" >> .env
        echo "${{ secrets.DATABASE_PASSWORD }}" >> .env
        echo "${{ secrets.DATABASE_HOST }}" >> .env
        echo "${{ secrets.DATABASE_PORT }}" >> .env
        echo "${{ secrets.KAKAO_LOGIN_URL }}" >> .env
        echo "${{ secrets.KAKAO_CLIENT_ID }}" >> .env
        echo "${{ secrets.KAKAO_REDIRECT_URI }}" >> .env
        echo "${{ secrets.KAKAO_TOKEN_REQUEST_URI }}" >> .env
        echo "${{ secrets.KAKAO_USERINFO_REQUEST_URI }}" >> .env
        echo "${{ secrets.REDIS_HOST }}" >> .env
        echo "${{ secrets.REDIS_PORT }}" >> .env
        echo "${{ secrets.REDIS_PASSWORD }}" >> .env

    - name: Setup MySQL
      uses: samin/mysql-action@v1
      with:
        character set server: 'utf8'
        mysql database: ${{ secrets.DATABASE_NAME }}
        mysql user: ${{ secrets.DATABASE_USER }}
        mysql password: ${{ secrets.DATABASE_PASSWORD }}

    - name: Run migrations
      run: |
        source .venv/bin/activate
        python manage.py migrate --noinput

    - name: Find test modules
      id: find_tests
      run: |
        source .venv/bin/activate
        chmod +x find_test_modules.sh
        TEST_MODULES=$(./find_test_modules.sh)
        echo "TEST_MODULES=$TEST_MODULES" >> $GITHUB_ENV

    - name: Run tests
      run: |
        source .venv/bin/activate
        python manage.py test $TEST_MODULES
